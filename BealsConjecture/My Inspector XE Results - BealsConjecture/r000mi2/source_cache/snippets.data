<?xml version="1.0" encoding="UTF-8"?>
<snippets>
  <file name="C:\Users\mcgee\Documents\GitHub\BealsConjecture\BealsConjecture\bealSearcher.h" md5="28e934cf86380670cc14e4de782c41e3">
    <snippet line="20">
      <line line="17">  std::tuple&lt;UlhashHashtable, UlhashHashtable&gt; genZs(uint64 minBase, uint64 minPow, uint64 maxBase, uint64 maxPow, bool useLogFile)</line>
      <line line="18">  {</line>
      <line line="19">    logger.logCurrentTime();</line>
      <line line="20"/>
      <line line="21">    uint64 hashsetSize = (maxBase - minBase + 1)*(maxPow - minPow + 1);</line>
    </snippet>
  </file>
  <file name="C:\Users\mcgee\Documents\GitHub\BealsConjecture\BealsConjecture\bealhash3.cpp" md5="9ab187a299ffcc29a2e05d32299e9c77">
    <snippet line="76">
      <line line="73"/>
      <line line="74">  std::cout &lt;&lt; "Generating z^s..." &lt;&lt; std::endl;</line>
      <line line="75">  auto hashtables = bealSearcher.genZs(2, 3, maxBase, maxPow, useLogFile);</line>
      <line line="76">    </line>
      <line line="77">  std::cout &lt;&lt; "Done. Searching for candidates..." &lt;&lt; std::endl;</line>
    </snippet>
  </file>
  <file name="C:\Users\mcgee\Documents\GitHub\BealsConjecture\BealsConjecture\logger.h" md5="2dd7fb28608eba1b90dcef98de6e40fb">
    <snippet line="16">
      <line line="13">  void logCurrentTime() const</line>
      <line line="14">  {</line>
      <line line="15">    std::ofstream logFile;</line>
      <line line="16">    logFile.open("logfile.txt", std::ios::app);</line>
      <line line="17">    logFile &lt;&lt; "now is " &lt;&lt; currentDateTime() &lt;&lt; std::endl &lt;&lt; std::flush;</line>
    </snippet>
    <snippet line="19">
      <line line="16">    logFile.open("logfile.txt", std::ios::app);</line>
      <line line="17">    logFile &lt;&lt; "now is " &lt;&lt; currentDateTime() &lt;&lt; std::endl &lt;&lt; std::flush;</line>
      <line line="18">    logFile.close();</line>
      <line line="19">  }</line>
      <line line="20"/>
    </snippet>
  </file>
  <file name="c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\fstream" md5="29520b2611c3c3e3c2a562efda996890">
    <snippet line="148">
      <line line="145">		if (_Closef)</line>
      <line line="146">			close();</line>
      <line line="147">		}</line>
      <line line="148"/>
      <line line="149">	basic_filebuf(_Filet *_File = 0)</line>
    </snippet>
    <snippet line="150">
      <line line="147">		}</line>
      <line line="148"/>
      <line line="149">	basic_filebuf(_Filet *_File = 0)</line>
      <line line="150">		: _Mysb()</line>
      <line line="151">		{	// construct from pointer to C stream</line>
    </snippet>
    <snippet line="931">
      <line line="928">	typedef basic_ios&lt;_Elem, _Traits&gt; _Myios;</line>
      <line line="929"/>
      <line line="930">	basic_ofstream()</line>
      <line line="931">		: _Mybase(&amp;_Filebuffer)</line>
      <line line="932">		{	// construct unopened</line>
    </snippet>
    <snippet line="1072">
      <line line="1069">	virtual __CLR_OR_THIS_CALL ~basic_ofstream()</line>
      <line line="1070">		{	// destroy the object</line>
      <line line="1071">		}</line>
      <line line="1072"/>
      <line line="1073">	_Myfb *rdbuf() const</line>
    </snippet>
  </file>
  <file name="f:\dd\vctools\crt_bld\self_64_amd64\crt\src\streambuf" md5="7768f61ef78d8943c586fbef4c1b9bcf">
    <snippet line="25">
      <line line="22">    __CLR_OR_THIS_CALL basic_streambuf()</line>
      <line line="23">        : _Plocale(_NEW_CRT locale)</line>
      <line line="24">        {    // construct with no buffers</line>
      <line line="25">        _Init();</line>
      <line line="26">        }</line>
    </snippet>
    <snippet line="80">
      <line line="77">	virtual __CLR_OR_THIS_CALL ~basic_streambuf()</line>
      <line line="78">		{	// destroy the object</line>
      <line line="79">		_DELETE_CRT(_Plocale);</line>
      <line line="80">		}</line>
      <line line="81"/>
    </snippet>
    <snippet line="81">
      <line line="78">		{	// destroy the object</line>
      <line line="79">		_DELETE_CRT(_Plocale);</line>
      <line line="80">		}</line>
      <line line="81"/>
      <line line="82">	typedef typename _Traits::int_type int_type;</line>
    </snippet>
  </file>
  <file name="f:\dd\vctools\crt_bld\self_64_amd64\crt\src\xdebug" md5="ea21c6df827637fe06f4725d30cf4286">
    <snippet line="62">
      <line line="59">        // delete as _NORMAL_BLOCK, not _CRT_BLOCK, since we might have</line>
      <line line="60">        // facets allocated by normal new.</line>
      <line line="61">        free(_Ptr);</line>
      <line line="62">        }</line>
      <line line="63">    }</line>
    </snippet>
  </file>
  <file name="f:\dd\vctools\crt_bld\self_64_amd64\crt\src\xiosbase" md5="eeceb7d1629ac86ac32b4138fe0351b2">
    <snippet line="564">
      <line line="561">        _Calls = 0;</line>
      <line line="562">        clear(goodbit);</line>
      <line line="563">        _Ploc = _NEW_CRT locale;</line>
      <line line="564">        }</line>
      <line line="565"/>
    </snippet>
  </file>
  <file name="f:\dd\vctools\crt_bld\self_64_amd64\crt\src\xmutex.cpp" md5="17c3073d7fd3461864221e75c7fdf159">
    <snippet line="12">
      <line line="9">__thiscall _Mutex::_Mutex()</line>
      <line line="10">    : _Mtx(_NEW_CRT _Rmtx)</line>
      <line line="11">    {    // initialize recursive mutex object</line>
      <line line="12">    _Mtxinit((_Rmtx*)_Mtx);</line>
      <line line="13">    }</line>
    </snippet>
    <snippet line="19">
      <line line="16">	{	// release resources allocated to mutex object</line>
      <line line="17">	_Mtxdst((_Rmtx*)_Mtx);</line>
      <line line="18">	_DELETE_CRT((_Rmtx*)_Mtx);</line>
      <line line="19">	}</line>
      <line line="20"/>
    </snippet>
  </file>
</snippets>
